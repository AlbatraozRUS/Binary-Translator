///////////////////////////
//   List of available   //
//        commands       //
///////////////////////////

PUSH <number>         # Push number to stack
PUSH_R <reg>          # From register to stack
POP_R <reg>           # Pops from stack and mov it to register
MOV <reg1>, <reg2>    # Mov value from reg2 to reg1
MOV <reg1>, <number>  # Mov number to reg2
CALL <label>          # Call function with appropriate label
RET                   # Returns from function
EXIT                  # End of programm
WRITE <reg>           # Writes to stdout value from register
READ <reg>            # Reads and places value from stdin to register

# add/sub/mul/div value in register1 from register2
ADD_R <reg1>, <reg2>
SUB_R <reg1>, <reg2>
DIV_R <reg1>, <reg2>
MUL_R <reg1>, <reg2>

# add/sub/mul/div value in register1 with number
ADD <reg>, <number>
SUB <reg>, <number>
MUL <reg>, <number>
DIV <reg>, <number>

INC <reg>   # Adds 1 to register
DEC <reg>   # Subs 1 from register

JMP <label> # Moves PC to label (don`t depends from "CMP")

CMP_R <reg1>, <reg2>    # Compare register1 and register2
CMP <reg1>, <reg2>      # Compare register1 and number

# Move PC to label (depends from "CMP")
JA  <label>
JEA <label>
JB  <label>
JBE <label>
JE  <label>
JNE <label>

